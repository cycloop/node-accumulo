{"name":"Node-accumulo","body":"node-accumulo\r\n=============\r\n\r\nThis project uses node.js to ingest into Apache Accumulo via RabbitMQ and a Java application. The intent is to store records of a client visiting a website, much like a Google Analytics. This example is meant to be contrived and the intent is to show the potential of using node to (indirectly) ingest data into Apache Accumulo. \r\n\r\n### Brief Summary\r\n\r\n[node.js][] runs an HTTP webserver which accepts incoming requests from an HTTP client. Upon receipt, it strips the intended information off the query string of the request URL and fires a JSON string over RabbitMQ. Meanwhile, a Java process is running in the background, pulling data off of a queue that the node server is writing to. Upon receipt of a message, the Java process converts the JSON string into an object, creates, and then inserts mutations into Accumulo corresponding to the data contained in the JSON string.\r\n\r\n### Prerequisites\r\n\r\nI'll make the (bold) assumption that you already have [Apache Hadoop][], [Apache Zookeeper][], and [Apache Accumulo][] installed on your machine. There is good documentation elsewhere for this.\r\n\r\n#### RabbitMQ and node.js\r\n\r\nThese should be relatively straightfoward, something along the lines of:\r\n\r\n    # emerge net-misc/rabbitmq-server net-libs/nodejs\r\n\r\nOtherwise, you can manually install both [RabbitMQ][] and [node.js][]. Don't forget to start RabbitMQ.\r\n\r\n    # /etc/init.d/rabbitmq start\r\n\r\n#### Display\r\n\r\n[Express][], [Jade][], [Socket.IO][], and [DataTables][] were used to create an simple interface for users to view data stored in Accumulo.\r\n\r\n#### Running the application\r\n\r\nMake sure you have Hadoop, Zookeeper, and Accumulo started, then install the dependencies for the application and start it.\r\n\r\n    $ cd node\r\n    $ npm install\r\n    $ NODE_ENV=production node node/server.js\r\n\r\nBuild and run the AmqpWebAnalytics class\r\n\r\n    $ cd java/webanalytics\r\n    $ mvn package\r\n    $ bin/run.sh\r\n\r\nFire up curl to load some data\r\n\r\n    $ curl http://localhost:3000/analytics/10.0.0.1 -d \"visitor=10.0.0.2\"\r\n    $ curl http://localhost:3000/analytics/10.0.0.1 -d \"visitor=10.0.0.3\"\r\n    $ curl http://localhost:3000/analytics/10.0.0.1 -d \"visitor=10.0.0.4\"\r\n\r\nUse the site to view the data at http://localhost:3000. You can also open up the Accumulo shell to verify that the record exists.\r\n\r\n    root@accumulo analytics> scan\r\n    10.0.0.1 10.0.0.2:1335928232348 []\r\n    10.0.0.1 10.0.0.3:1335928232353 []\r\n    10.0.0.1 10.0.0.4:1335928232358 []\r\n\r\n#### Having fun\r\n\r\nIf you really want to test out the server, try running siege to flood the process :D\r\n\r\n    # emerge -av app-benchmarks/siege\r\n    $ siege.config\r\n    $ siege -b -c 800 \"http://localhost:3000/analytics/10.0.0.1 POST visitor=10.0.0.2\"\r\n\r\n[RabbitMQ]: http://www.rabbitmq.com/ \"RabbitMQ\"\r\n[node.js]: http://nodejs.org/       \"node.js\"\r\n[node-amqp-module]: https://github.com/postwait/node-amqp \"node-amqp module\"\r\n[Apache Hadoop]: http://hadoop.apache.org/common/docs/r0.20.2/quickstart.html#PseudoDistributed \"Apache Hadoop\"\r\n[Apache Zookeeper]: http://zookeeper.apache.org/doc/r3.3.1/zookeeperStarted.html \"Apache Zookeeper\"\r\n[Apache Accumulo]: http://accumulo.apache.org/1.4/user_manual/Administration.html \"Apache Accumulo\"\r\n[Express]: http://expressjs.com/ \"Express\"\r\n[Jade]: http://jade-lang.com \"Jade\"\r\n[Socket.IO]: http://socket.io \"Socket.IO\"\r\n[DataTables]: http://datatables.net \"DataTables\"","tagline":"Using Node.js to ingest into Accumulo via RabbitMQ and Java","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}